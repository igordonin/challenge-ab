apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gold-storage-class
provisioner: kubernetes.io/gce-pd
volumeBindingMode: Immediate
allowVolumeExpansion: true
reclaimPolicy: Delete
parameters:
  type: pd-standard
  fstype: ext4
  replication-type: none
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-postgres-volume-claim
  labels:
    type: local
    app: api-postgres
spec:
  storageClassName: gold-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10
  # volumeName: api-postgres-pv # use only for existing volumes. otherwise, it will be created
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-postgres-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-postgres
  template:
    metadata:
      labels:
        app: api-postgres
    spec:
      containers:
        - name: api-postgres
          image: postgres:14.4
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: airbank-secrets
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airbank-secrets
                  key: DB_PW   
            - name: POSTGRES_DB
              value: airbankdb
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume-mount
              subPath: pgdata
      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: api-postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: api-postgres
  labels:
    app: api-postgres
spec:
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
   app: api-postgres